evaluate-commands %sh{
	plugins="$kak_config/plugins"
	mkdir -p "$plugins"
	[ ! -e "$plugins/plug.kak" ] && \
		git clone -q https://github.com/andreyorst/plug.kak.git "$plugins/plug.kak"
	printf "%s\n" "source '$plugins/plug.kak/rc/plug.kak'"
}

plug "andreyorst/plug.kak" noload
#plug "kak-lsp/kak-lsp" do %{
#  cargo install --locked --force --path .
#  mkdir -p ~/.config/kak-lsp
#  cp -n kak-lsp.toml ~/.config/kak-lsp/
#}
plug "alexherbo2/auto-pairs.kak" config %{
	enable-auto-pairs
}
plug "danr/kakoune-easymotion" config %{
	map global user w ': easy-motion-w<ret>' -docstring 'hint next words'
	map global user W ': easy-motion-W<ret>' -docstring 'hint next whole words'
	map global user b ': easy-motion-b<ret>' -docstring 'hint previous words'
	map global user B ': easy-motion-B<ret>' -docstring 'hint previous whole words'
}
plug "Delapouite/kakoune-buffers" config %{
  alias global bo buffer-only
  alias global bo! buffer-only-force
  map global user o ': buffer-only<ret>' -docstring 'close all other buffers'
  map global user O ': buffer-only-force<ret>' -docstring 'force close all other buffers'
}
plug "h-youhei/kakoune-surround" config %{
	map global user s ': surround<ret>' -docstring 'surround selection'
	map global user c ': change-surround<ret>' -docstring 'change surround'
	map global user d ': delete-surround<ret>' -docstring 'delete surround'
}
plug "andreyorst/fzf.kak" config %{
  map global normal <c-p> ': fzf-mode<ret>' -docstring 'fuzzy find mode'
}
plug "andreyorst/smarttab.kak" defer smarttab %{
  set-option global softtabstop 2
}
plug "lePerdu/kakboard" config %{
  set global kakboard_copy_cmd 'xclip -i -selection clipboard'
  set global kakboard_paste_cmd 'xclip -o -selection clipboard'
  map global user y ': kakboard-with-push-clipboard y<ret>' -docstring 'yank to clipboard'
  map global user p ': kakboard-with-pull-clipboard p<ret>' -docstring 'paste after from clipboard'
  map global user P ': kakboard-with-pull-clipboard P<ret>' -docstring 'paste before from clipboard'
  map global user R ': kakboard-with-pull-clipboard R<ret>' -docstring 'replace from clipboard'
}

map global user g ': grep %val{selection} ' -docstring 'grep for selection'
map global user f ': format<ret>' -docstring 'format buffer'

eval %sh{kak-lsp --kakoune -s $kak_session}
hook global WinSetOption filetype=(go|cpp) %{
  lsp-enable-window
}

map global user l %{:enter-user-mode lsp<ret>} -docstring "LSP mode"
map global object f '<a-semicolon>lsp-object Function Method<ret>' -docstring "LSP function or method"
map global object t '<a-semicolon>lsp-object Class Interface Struct<ret>' -docstring "LSP class, interface or struct"

plug "TeddyDD/kakoune-selenized" theme

evaluate-commands %sh{
  find "${kak_config}/rc" -type f -name '*\.kak' \
    | sed 's/.*/try %{ source "&" } catch %{ echo -debug config: could not load "&" }/'
}

set-option global tabstop 2
set-option global indentwidth 2

add-highlighter global/matching show-matching
add-highlighter global/numbers number-lines -relative -hlcursor

colorscheme bogons

hook global WinSetOption filetype=(.*) %{
  expandtab
}
